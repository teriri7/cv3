name: Build Python Application

on:
  push:
    branches:
      - main  # 在主分支上推送时触发
  pull_request:
    branches:
      - main  # 在对主分支的拉取请求时触发

jobs:
  build:
    runs-on: windows-latest  # 使用Windows环境

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # 检出你的代码仓库

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # 安装Python 3.x版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller  # 安装PyInstaller
        pip install -r requirements.txt  # 安装其他项目依赖

    - name: Build executable
      run: |
        pyinstaller --onefile db.py  # 将 db.py 打包成单个可执行文件
      shell: bash

    - name: Create a new version tag
      id: tag_version
      run: |
        tag="v1.0.$(date +'%Y%m%d%H%M%S')"  # 创建带有时间戳的版本标签
        echo "Tagging version as $tag"
        git tag $tag
        git push origin $tag  # 推送标签到远程仓库

    - name: Upload exe as artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-python-app
        path: dist/db.exe  # 指定打包生成的 exe 文件路径

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/db.exe  # 将 exe 文件发布到 GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub 提供的 token，用于创建发布版本
      if: github.ref == 'refs/heads/main'
